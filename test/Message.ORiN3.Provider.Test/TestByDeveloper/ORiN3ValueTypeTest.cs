using Xunit;
using MessageORiN3ValueType = Message.ORiN3.Common.V1.AutoGenerated.ORiN3ValueType;
using DesignORiN3ValueType = Design.ORiN3.Provider.V1.Type.ORiN3ValueType;

namespace Message.ORiN3.Provider.Test.TestByDeveloper
{
    public class ORiN3ValueTypeTest
    {
        [Fact]
        public void Test()
        {
            var messageORiN3ValueTypes = Enum.GetValues<MessageORiN3ValueType>()
                .ToDictionary(t => t.ToString().ToLower(), t => Convert.ToInt32(t));
            var designORiN3ValueTypes = Enum.GetValues<DesignORiN3ValueType>()
                .ToDictionary(t => t.ToString().ToLower(), t => Convert.ToInt32(t));

            foreach (var it in messageORiN3ValueTypes)
            {
                if (it.Value == (int)MessageORiN3ValueType.Orin3InvalidType)
                {
                    continue;
                }
                Assert.True(designORiN3ValueTypes.ContainsKey(it.Key));
                Assert.Equal(it.Value, designORiN3ValueTypes[it.Key]);
            }
        }
    }
}