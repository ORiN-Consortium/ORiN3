name: Publish NuGet Packages

on:
  workflow_dispatch:
    inputs:
      configuration:
        description: 'configuration'
        required: true
        type: choice
        options:
          - Release
          - Debug
        default: 'Release'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore
      - name: Update Version
        run: |
          VERSION_FILE="$GITHUB_WORKSPACE/SolutionDefines.ProjectVersion.targets"
          PROJECT_VERSION=$(grep -oP '(?<=<ProjectVersion>).*(?=</ProjectVersion>)' $VERSION_FILE)
          NUGET_VERSION=$(grep -oP '(?<=<NugetPackageVersion>).*(?=</NugetPackageVersion>)' $VERSION_FILE)

          IFS='.' read -ra VERSION_PARTS <<< "$PROJECT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          BUILD=${VERSION_PARTS[2] + 1}
          REVISION=$((VERSION_PARTS[3]))

          NEW_PROJECT_VERSION="$MAJOR.$MINOR.$BUILD.$REVISION"
          NEW_NUGET_VERSION="$MAJOR.$MINOR.$BUILD"
        
          sed -i "s/<ProjectVersion>.*<\/ProjectVersion>/<ProjectVersion>$NEW_PROJECT_VERSION<\/ProjectVersion>/" $VERSION_FILE
          sed -i "s/<NugetPackageVersion>.*<\/NugetPackageVersion>/<NugetPackageVersion>$NEW_NUGET_VERSION<\/NugetPackageVersion>/" $VERSION_FILE

          echo "Updated Project Version: $NEW_PROJECT_VERSION"
          echo "Updated NuGet Version: $NEW_NUGET_VERSION"
      - name: Build
        run: dotnet build --configuration ${{ github.event.inputs.configuration }} --no-restore
      - name: Pack
        run: dotnet pack --configuration ${{ github.event.inputs.configuration }} --no-build --output nupkgs
      - uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Test
        run: dotnet test --no-build --configuration ${{ github.event.inputs.configuration }} --logger trx --results-directory TestResults
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults
        if: always()

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-output
    
