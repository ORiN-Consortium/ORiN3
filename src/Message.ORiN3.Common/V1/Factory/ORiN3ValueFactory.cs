using Google.Protobuf;
using Message.ORiN3.Common.V1.AutoGenerated;
using System;
using System.Linq;

namespace Message.ORiN3.Common.V1.Factory;

public static class ORiN3ValueFactory
{
    public static ORiN3Value Create(bool data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Bool,
            Bool = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(bool[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3BoolArray();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3BoolArray,
            BoolArray = array,
        };
    }

    private static ORiN3NullableBool ChangeTypeToORiN3(bool? data)
    {
        return new ORiN3NullableBool()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(bool? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableBool,
            NullableBool = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(bool?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableBoolArray();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableBoolArray,
            NullableBoolArray = array,
        };
    }

    public static ORiN3Value Create(byte data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint8,
            UInt8 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(byte[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3UInt8Array();
        array.RawValue.Add(data.Select(_ => (uint)_));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint8Array,
            UInt8Array = array,
        };
    }

    private static ORiN3NullableUInt8 ChangeTypeToORiN3(byte? data)
    {
        return new ORiN3NullableUInt8()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(byte? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint8,
            NullableUInt8 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(byte?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableUInt8Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint8Array,
            NullableUInt8Array = array,
        };
    }

    public static ORiN3Value Create(ushort data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint16,
            UInt16 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(ushort[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3UInt16Array();
        array.RawValue.Add(data.Select(_ => (uint)_));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint16Array,
            UInt16Array = array,
        };
    }

    private static ORiN3NullableUInt16 ChangeTypeToORiN3(ushort? data)
    {
        return new ORiN3NullableUInt16()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(ushort? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint16,
            NullableUInt16 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(ushort?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableUInt16Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint16Array,
            NullableUInt16Array = array,
        };
    }

    public static ORiN3Value Create(uint data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint32,
            UInt32 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(uint[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3UInt32Array();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint32Array,
            UInt32Array = array,
        };
    }

    private static ORiN3NullableUInt32 ChangeTypeToORiN3(uint? data)
    {
        return new ORiN3NullableUInt32()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(uint? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint32,
            NullableUInt32 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(uint?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableUInt32Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint32Array,
            NullableUInt32Array = array,
        };
    }

    public static ORiN3Value Create(ulong data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint64,
            UInt64 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(ulong[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3UInt64Array();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Uint64Array,
            UInt64Array = array,
        };
    }

    private static ORiN3NullableUInt64 ChangeTypeToORiN3(ulong? data)
    {
        return new ORiN3NullableUInt64()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(ulong? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint64,
            NullableUInt64 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(ulong?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableUInt64Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableUint64Array,
            NullableUInt64Array = array,
        };
    }

    public static ORiN3Value Create(sbyte data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int8,
            Int8 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(sbyte[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3Int8Array();
        array.RawValue.Add(data.Select(_ => (int)_));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int8Array,
            Int8Array = array,
        };
    }

    private static ORiN3NullableInt8 ChangeTypeToORiN3(sbyte? data)
    {
        return new ORiN3NullableInt8()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(sbyte? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt8,
            NullableInt8 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(sbyte?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableInt8Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt8Array,
            NullableInt8Array = array,
        };
    }

    public static ORiN3Value Create(short data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int16,
            Int16 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(short[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3Int16Array();
        array.RawValue.Add(data.Select(_ => (int)_));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int16Array,
            Int16Array = array,
        };
    }

    private static ORiN3NullableInt16 ChangeTypeToORiN3(short? data)
    {
        return new ORiN3NullableInt16()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(short? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt16,
            NullableInt16 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(short?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableInt16Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt16Array,
            NullableInt16Array = array,
        };
    }

    public static ORiN3Value Create(int data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int32,
            Int32 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(int[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3Int32Array();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int32Array,
            Int32Array = array,
        };
    }

    private static ORiN3NullableInt32 ChangeTypeToORiN3(int? data)
    {
        return new ORiN3NullableInt32()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(int? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt32,
            NullableInt32 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(int?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableInt32Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt32Array,
            NullableInt32Array = array,
        };
    }

    public static ORiN3Value Create(long data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int64,
            Int64 = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(long[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3Int64Array();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Int64Array,
            Int64Array = array,
        };
    }

    private static ORiN3NullableInt64 ChangeTypeToORiN3(long? data)
    {
        return new ORiN3NullableInt64()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(long? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt64,
            NullableInt64 = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(long?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableInt64Array();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableInt64Array,
            NullableInt64Array = array,
        };
    }

    public static ORiN3Value Create(float data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Float,
            Float = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(float[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3FloatArray();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3FloatArray,
            FloatArray = array,
        };
    }

    private static ORiN3NullableFloat ChangeTypeToORiN3(float? data)
    {
        return new ORiN3NullableFloat()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(float? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableFloat,
            NullableFloat = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(float?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableFloatArray();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableFloatArray,
            NullableFloatArray = array,
        };
    }

    public static ORiN3Value Create(double data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Double,
            Double = new() { RawValue = data },
        };
    }

    public static ORiN3Value Create(double[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3DoubleArray();
        array.RawValue.Add(data);
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3DoubleArray,
            DoubleArray = array,
        };
    }

    private static ORiN3NullableDouble ChangeTypeToORiN3(double? data)
    {
        return new ORiN3NullableDouble()
        {
            IsNull = data == null,
            RawValue = data ?? default
        };
    }

    public static ORiN3Value Create(double? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableDouble,
            NullableDouble = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(double?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableDoubleArray();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableDoubleArray,
            NullableDoubleArray = array,
        };
    }

    public static ORiN3Value Create(DateTime data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Datetime,
            DateTime = new() { RawValue = data.Ticks },
        };
    }

    public static ORiN3Value Create(DateTime[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3DateTimeArray();
        array.RawValue.Add(data.Select(_ => _.Ticks));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3DatetimeArray,
            DateTimeArray = array,
        };
    }

    private static ORiN3NullableDateTime ChangeTypeToORiN3(DateTime? data)
    {
        return new ORiN3NullableDateTime()
        {
            IsNull = data == null,
            RawValue = data.HasValue ? data.Value.Ticks : DateTime.MinValue.Ticks
        };
    }

    public static ORiN3Value Create(DateTime? data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableDatetime,
            NullableDateTime = ChangeTypeToORiN3(data),
        };
    }

    public static ORiN3Value Create(DateTime?[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3NullableDateTimeArray();
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3NullableDatetimeArray,
            NullableDateTimeArray = array,
        };
    }

    private static ORiN3String ChangeTypeToORiN3(string data)
    {
        return new ORiN3String()
        {
            IsNull = data == null,
            RawValue = data ?? string.Empty,
        };
    }

    /// <summary>
    /// Create a ORiN3Value of a string.
    /// </summary>
    /// <param name="data"></param>
    /// <returns></returns>
    public static ORiN3Value Create(string data)
    {
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3String,
            String = ChangeTypeToORiN3(data),
        };
    }

    /// <summary>
    /// Create a ORiN3Value of variables in an array of strings.
    /// </summary>
    /// <param name="data"></param>
    /// <returns></returns>
    /// <exception cref="ArgumentNullException"></exception>
    public static ORiN3Value Create(string[] data)
    {
        data = data ?? throw new ArgumentNullException(nameof(data));

        var array = new ORiN3StringArray();
        var test = data.Select(ChangeTypeToORiN3);
        array.RawValue.Add(data.Select(ChangeTypeToORiN3));
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3StringArray,
            StringArray = array,
        };
    }

    /// <summary>
    /// Create a ORiN3Value of variables in an array of objects.
    /// </summary>
    /// <param name="data"></param>
    /// <returns></returns>
    /// <exception cref="ArgumentNullException"></exception>
    public static ORiN3Value Create(object data)
    {
        var orin3Object = new ORiN3ValueObject
        {
            RawValue = ByteString.CopyFrom(ORiN3BinaryConverter.ToBinary(data))
        };
        return new ORiN3Value()
        {
            Type = ORiN3ValueType.Orin3Object,
            Object = orin3Object,
        };
    }
}
