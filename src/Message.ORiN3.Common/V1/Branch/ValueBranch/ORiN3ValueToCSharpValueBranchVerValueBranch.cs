using Design.ORiN3.Common.V1;
using Message.ORiN3.Common.V1.AutoGenerated;
using System;
using System.Diagnostics.CodeAnalysis;
using System.Linq;

namespace Message.ORiN3.Common.V1.Branch.ValueBranch;

public class ORiN3ValueToCSharpValueBranchVerValueBranch : IValueBranch
{
    [NotNull]
    public ORiN3Value? Source { get; set; }
    public object? Result { get; set; }
    public void CaseOfBool() => Result = Source.Bool.RawValue;
    public void CaseOfInt8() => Result = Convert.ToSByte(Source.Int8.RawValue);
    public void CaseOfUInt8() => Result = Convert.ToByte(Source.UInt8.RawValue);
    public void CaseOfInt16() => Result = Convert.ToInt16(Source.Int16.RawValue);
    public void CaseOfUInt16() => Result = Convert.ToUInt16(Source.UInt16.RawValue);
    public void CaseOfInt32() => Result = Source.Int32.RawValue;
    public void CaseOfUInt32() => Result = Source.UInt32.RawValue;
    public void CaseOfInt64() => Result = Source.Int64.RawValue;
    public void CaseOfUInt64() => Result = Source.UInt64.RawValue;
    public void CaseOfFloat() => Result = Source.Float.RawValue;
    public void CaseOfDouble() => Result = Source.Double.RawValue;
    public void CaseOfDateTime() => Result = DateTime.FromBinary(Source.DateTime.RawValue);
    public void CaseOfString() => Result = Source.String.IsNull ? null : Source.String.RawValue;

    public void CaseOfBoolArray() => Result = Source.BoolArray.RawValue.ToArray();
    public void CaseOfInt8Array() => Result = Source.Int8Array.RawValue.Select(Convert.ToSByte).ToArray();
    public void CaseOfUInt8Array() => Result = Source.UInt8Array.RawValue.Select(Convert.ToByte).ToArray();
    public void CaseOfInt16Array() => Result = Source.Int16Array.RawValue.Select(Convert.ToInt16).ToArray();
    public void CaseOfUInt16Array() => Result = Source.UInt16Array.RawValue.Select(Convert.ToUInt16).ToArray();
    public void CaseOfInt32Array() => Result = Source.Int32Array.RawValue.ToArray();
    public void CaseOfUInt32Array() => Result = Source.UInt32Array.RawValue.ToArray();
    public void CaseOfInt64Array() => Result = Source.Int64Array.RawValue.ToArray();
    public void CaseOfUInt64Array() => Result = Source.UInt64Array.RawValue.ToArray();
    public void CaseOfFloatArray() => Result = Source.FloatArray.RawValue.ToArray();
    public void CaseOfDoubleArray() => Result = Source.DoubleArray.RawValue.ToArray();
    public void CaseOfDateTimeArray() => Result = Source.DateTimeArray.RawValue.Select(DateTime.FromBinary).ToArray();
    public void CaseOfStringArray() => Result = Source.StringArray.RawValue.Select(it => it.IsNull ? null : it.RawValue).ToArray();

    public void CaseOfNullableBoolArray() => Result = Source.NullableBoolArray.RawValue.Select(it => (bool?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableInt8Array() => Result = Source.NullableInt8Array.RawValue.Select(it => (sbyte?)(it.IsNull ? null : Convert.ToSByte(it.RawValue))).ToArray();
    public void CaseOfNullableUInt8Array() => Result = Source.NullableUInt8Array.RawValue.Select(it => (byte?)(it.IsNull ? null : Convert.ToByte(it.RawValue))).ToArray();
    public void CaseOfNullableInt16Array() => Result = Source.NullableInt16Array.RawValue.Select(it => (short?)(it.IsNull ? null : Convert.ToInt16(it.RawValue))).ToArray();
    public void CaseOfNullableUInt16Array() => Result = Source.NullableUInt16Array.RawValue.Select(it => (ushort?)(it.IsNull ? null : Convert.ToUInt16(it.RawValue))).ToArray();
    public void CaseOfNullableInt32Array() => Result = Source.NullableInt32Array.RawValue.Select(it => (int?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableUInt32Array() => Result = Source.NullableUInt32Array.RawValue.Select(it => (uint?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableInt64Array() => Result = Source.NullableInt64Array.RawValue.Select(it => (long?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableUInt64Array() => Result = Source.NullableUInt64Array.RawValue.Select(it => (ulong?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableFloatArray() => Result = Source.NullableFloatArray.RawValue.Select(it => (float?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableDoubleArray() => Result = Source.NullableDoubleArray.RawValue.Select(it => (double?)(it.IsNull ? null : it.RawValue)).ToArray();
    public void CaseOfNullableDateTimeArray() => Result = Source.NullableDateTimeArray.RawValue.Select(it => (DateTime?)(it.IsNull ? null : DateTime.FromBinary(it.RawValue))).ToArray();

    public void CaseOfNull() => Result = null;
    public void CaseOfObject() => Result = ORiN3BinaryConverter.ToObject(Source.Object.RawValue.ToByteArray());
}
