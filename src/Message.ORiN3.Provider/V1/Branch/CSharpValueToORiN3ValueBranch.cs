using Design.ORiN3.Common.V1;
using Message.ORiN3.Provider.V1.AutoGenerated;
using Message.ORiN3.Provider.V1.Factory;
using System;

namespace Message.ORiN3.Provider.V1.Branch;

public class CSharpValueToORiN3ValueBranch : IValueTypeBranch
{
    public object? Target { get; set; }
    public ORiN3Value? Result { get; set; }

    private void BranchOnNull(Action ifNull, Action ifNotNull)
    {
        if (Target is null)
        {
            ifNull.Invoke();
        }
        else
        {
            ifNotNull.Invoke();
        }
    }

    public void CaseOfBool() => Result = ORiN3ValueFactory.Create((bool)Target!);
    public void CaseOfInt8() => Result = ORiN3ValueFactory.Create((sbyte)Target!);
    public void CaseOfUInt8() => Result = ORiN3ValueFactory.Create((byte)Target!);
    public void CaseOfInt16() => Result = ORiN3ValueFactory.Create((short)Target!);
    public void CaseOfUInt16() => Result = ORiN3ValueFactory.Create((ushort)Target!);
    public void CaseOfInt32() => Result = ORiN3ValueFactory.Create((int)Target!);
    public void CaseOfUInt32() => Result = ORiN3ValueFactory.Create((uint)Target!);
    public void CaseOfInt64() => Result = ORiN3ValueFactory.Create((long)Target!);
    public void CaseOfUInt64() => Result = ORiN3ValueFactory.Create((ulong)Target!);
    public void CaseOfFloat() => Result = ORiN3ValueFactory.Create((float)Target!);
    public void CaseOfDouble() => Result = ORiN3ValueFactory.Create((double)Target!);
    public void CaseOfDateTime() => Result = ORiN3ValueFactory.Create((DateTime)Target!);
    public void CaseOfString() => Result = ORiN3ValueFactory.Create((string)Target!);

    public void CaseOfNullableBool() => BranchOnNull(CaseOfNull, CaseOfBool);
    public void CaseOfNullableInt8() => BranchOnNull(CaseOfNull, CaseOfInt8);
    public void CaseOfNullableUInt8() => BranchOnNull(CaseOfNull, CaseOfUInt8);
    public void CaseOfNullableInt16() => BranchOnNull(CaseOfNull, CaseOfInt16);
    public void CaseOfNullableUInt16() => BranchOnNull(CaseOfNull, CaseOfUInt16);
    public void CaseOfNullableInt32() => BranchOnNull(CaseOfNull, CaseOfInt32);
    public void CaseOfNullableUInt32() => BranchOnNull(CaseOfNull, CaseOfUInt32);
    public void CaseOfNullableInt64() => BranchOnNull(CaseOfNull, CaseOfInt64);
    public void CaseOfNullableUInt64() => BranchOnNull(CaseOfNull, CaseOfUInt64);
    public void CaseOfNullableFloat() => BranchOnNull(CaseOfNull, CaseOfFloat);
    public void CaseOfNullableDouble() => BranchOnNull(CaseOfNull, CaseOfDouble);
    public void CaseOfNullableDateTime() => BranchOnNull(CaseOfNull, CaseOfDateTime);
    public void CaseOfNullableString() => BranchOnNull(CaseOfNull, CaseOfString);

    public void CaseOfBoolArray() => Result = ORiN3ValueFactory.Create((bool[])Target!);
    public void CaseOfInt8Array() => Result = ORiN3ValueFactory.Create((sbyte[])Target!);
    public void CaseOfUInt8Array() => Result = ORiN3ValueFactory.Create((byte[])Target!);
    public void CaseOfInt16Array() => Result = ORiN3ValueFactory.Create((short[])Target!);
    public void CaseOfUInt16Array() => Result = ORiN3ValueFactory.Create((ushort[])Target!);
    public void CaseOfInt32Array() => Result = ORiN3ValueFactory.Create((int[])Target!);
    public void CaseOfUInt32Array() => Result = ORiN3ValueFactory.Create((uint[])Target!);
    public void CaseOfInt64Array() => Result = ORiN3ValueFactory.Create((long[])Target!);
    public void CaseOfUInt64Array() => Result = ORiN3ValueFactory.Create((ulong[])Target!);
    public void CaseOfFloatArray() => Result = ORiN3ValueFactory.Create((float[])Target!);
    public void CaseOfDoubleArray() => Result = ORiN3ValueFactory.Create((double[])Target!);
    public void CaseOfDateTimeArray() => Result = ORiN3ValueFactory.Create((DateTime[])Target!);
    public void CaseOfStringArray() => Result = ORiN3ValueFactory.Create((string[])Target!);

    public void CaseOfNullableBoolArray() => Result = ORiN3ValueFactory.Create((bool?[])Target!);
    public void CaseOfNullableInt8Array() => Result = ORiN3ValueFactory.Create((sbyte?[])Target!);
    public void CaseOfNullableUInt8Array() => Result = ORiN3ValueFactory.Create((byte?[])Target!);
    public void CaseOfNullableInt16Array() => Result = ORiN3ValueFactory.Create((short?[])Target!);
    public void CaseOfNullableUInt16Array() => Result = ORiN3ValueFactory.Create((ushort?[])Target!);
    public void CaseOfNullableInt32Array() => Result = ORiN3ValueFactory.Create((int?[])Target!);
    public void CaseOfNullableUInt32Array() => Result = ORiN3ValueFactory.Create((uint?[])Target!);
    public void CaseOfNullableInt64Array() => Result = ORiN3ValueFactory.Create((long?[])Target!);
    public void CaseOfNullableUInt64Array() => Result = ORiN3ValueFactory.Create((ulong?[])Target!);
    public void CaseOfNullableFloatArray() => Result = ORiN3ValueFactory.Create((float?[])Target!);
    public void CaseOfNullableDoubleArray() => Result = ORiN3ValueFactory.Create((double?[])Target!);
    public void CaseOfNullableDateTimeArray() => Result = ORiN3ValueFactory.Create((DateTime?[])Target!);

    public void CaseOfObject() => Result = ORiN3ValueFactory.Create(Target!);
    public void CaseOfError() => CaseOfNull();

    private void CaseOfNull() => Result = new ORiN3Value { NullableBool = new() { IsNull = true } };
}
